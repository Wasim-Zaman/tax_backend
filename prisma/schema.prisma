generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
    id           String    @id @default(uuid())
    email        String    @unique
    password     String
}

model User {
  id                String   @id @default(uuid())
  username          String   @unique
  image             String?
  password          String
  fullName          String?
  fatherName        String?
  gender            String?
  age               Int? 
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relation to Panchayat
  panchayatId       String?  // foreign key to Panchayat
  panchayat         Panchayat? @relation(fields: [panchayatId], references: [id])
}

model Panchayat {
  id                        String   @id @default(uuid())
  name                      String   @unique
  numberOfHabitations       Int?
  libraryCess               String?
  waterCess                 String?
  lightingCess              String?
  drainageCess              String?
  sportsCess                String?
  fireCess                  String?

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  
  // Relation to Mandal
  mandalId                  String?  // foreign key to Mandal
  mandal                    Mandal?  @relation(fields: [mandalId], references: [id])
  
  // Relation to Users (list of users belonging to this Panchayat)
  users                     User[]
}

model Mandal {
  id                        String   @id @default(uuid())
  name                      String
  numberOfGramaPanchayati   Int?

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  
  // Relation to Panchayats (list of Panchayats belonging to this Mandal)
  panchayats                Panchayat[]
}

model PanchayatiProfile {
  id                       String     @id @default(uuid())
  area                     String?
  population               String?
  numberOfHabitations      String?    // No of habitation
  houseHolds               String?    // House Holds
  numberOfEmployees        String?    // No of employees (including contact)
  waterSupplyTanks         String?    // No of water Supply Tanks
  tapConnections           String?    // No of Tap Connections
  roadLength               Float?     // Length of Roads
  drainageLength           Float?     // Length of Drainage
  streetLights             String?    // No of Street Lights
  communityHalls           String?    // No of Community Halls
  sweepers                 String?    // No of Sweepers
  tricycles                String?    // No of Tricycles
  tractors                 String?    // No of Tractors
  vans                     String?    // No of Vans
  foggingMachines          String?    // No of Fogging Machines
  cheruvulu                String?    // No of Cheruvulu
  coconutTrees             String?    // No of Coconut Trees
  assessmentNumber         String?    // No of Assessment Numbers
  sanitationMaterials      String?    // Sanitation material if any
  panchayatiShops          String?    // No of Panchayati Shops
  neighbouringPropertyNorth String?   // Enter neighbouring property detail north
  inputHelperText          String?    // Input Helper Text
  otherAssets              String?    // Other Assets
  numberOfPrimarySchools    String?    // No of Primary Schools
  numberOfHighSchools       String?    // No of High Schools
  numberOfAnganwadiCenters   String?    // No of Anganvadi Centers
  numberOfVillageClinics     String?    // No of Village Clinics

  // Foreign keys without explicit relation fields
  userId                   String?    // Foreign key to User
  panchayatId              String?    // Foreign key to Panchayat

  createdAt                DateTime   @default(now())
  updatedAt                DateTime   @updatedAt
}
